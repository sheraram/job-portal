{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{TextField}from\"@material-ui/core\";var EmailInput=function EmailInput(props){var label=props.label,value=props.value,onChange=props.onChange,inputErrorHandler=props.inputErrorHandler,handleInputError=props.handleInputError,required=props.required,className=props.className;return/*#__PURE__*/_jsx(TextField,{label:label,variant:\"outlined\",value:value,onChange:onChange,helperText:inputErrorHandler.email.message,onBlur:function onBlur(event){if(event.target.value===\"\"){if(required){handleInputError(\"email\",true,\"Email is required\");}else{handleInputError(\"email\",false,\"\");}}else{var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;if(re.test(String(event.target.value).toLowerCase())){handleInputError(\"email\",false,\"\");}else{handleInputError(\"email\",true,\"Incorrect email format\");}}},error:inputErrorHandler.email.error,className:className});};export default EmailInput;","map":{"version":3,"sources":["/home/shera/Desktop/React/job-portal-main/frontend/src/lib/EmailInput.js"],"names":["TextField","EmailInput","props","label","value","onChange","inputErrorHandler","handleInputError","required","className","email","message","event","target","re","test","String","toLowerCase","error"],"mappings":"2CAAA,OAASA,SAAT,KAA0B,mBAA1B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IAE1BC,CAAAA,KAF0B,CASxBD,KATwB,CAE1BC,KAF0B,CAG1BC,KAH0B,CASxBF,KATwB,CAG1BE,KAH0B,CAI1BC,QAJ0B,CASxBH,KATwB,CAI1BG,QAJ0B,CAK1BC,iBAL0B,CASxBJ,KATwB,CAK1BI,iBAL0B,CAM1BC,gBAN0B,CASxBL,KATwB,CAM1BK,gBAN0B,CAO1BC,QAP0B,CASxBN,KATwB,CAO1BM,QAP0B,CAQ1BC,SAR0B,CASxBP,KATwB,CAQ1BO,SAR0B,CAW5B,mBACE,KAAC,SAAD,EACE,KAAK,CAAEN,KADT,CAEE,OAAO,CAAC,UAFV,CAGE,KAAK,CAAEC,KAHT,CAIE,QAAQ,CAAEC,QAJZ,CAKE,UAAU,CAAEC,iBAAiB,CAACI,KAAlB,CAAwBC,OALtC,CAME,MAAM,CAAE,gBAACC,KAAD,CAAW,CACjB,GAAIA,KAAK,CAACC,MAAN,CAAaT,KAAb,GAAuB,EAA3B,CAA+B,CAC7B,GAAII,QAAJ,CAAc,CACZD,gBAAgB,CAAC,OAAD,CAAU,IAAV,CAAgB,mBAAhB,CAAhB,CACD,CAFD,IAEO,CACLA,gBAAgB,CAAC,OAAD,CAAU,KAAV,CAAiB,EAAjB,CAAhB,CACD,CACF,CAND,IAMO,CACL,GAAMO,CAAAA,EAAE,CAAG,uJAAX,CACA,GAAIA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACJ,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAN,CAA2Ba,WAA3B,EAAR,CAAJ,CAAuD,CACrDV,gBAAgB,CAAC,OAAD,CAAU,KAAV,CAAiB,EAAjB,CAAhB,CACD,CAFD,IAEO,CACLA,gBAAgB,CAAC,OAAD,CAAU,IAAV,CAAgB,wBAAhB,CAAhB,CACD,CACF,CACF,CArBH,CAsBE,KAAK,CAAED,iBAAiB,CAACI,KAAlB,CAAwBQ,KAtBjC,CAuBE,SAAS,CAAET,SAvBb,EADF,CA2BD,CAtCD,CAwCA,cAAeR,CAAAA,UAAf","sourcesContent":["import { TextField } from \"@material-ui/core\";\n\nconst EmailInput = (props) => {\n  const {\n    label,\n    value,\n    onChange,\n    inputErrorHandler,\n    handleInputError,\n    required,\n    className,\n  } = props;\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n      helperText={inputErrorHandler.email.message}\n      onBlur={(event) => {\n        if (event.target.value === \"\") {\n          if (required) {\n            handleInputError(\"email\", true, \"Email is required\");\n          } else {\n            handleInputError(\"email\", false, \"\");\n          }\n        } else {\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          if (re.test(String(event.target.value).toLowerCase())) {\n            handleInputError(\"email\", false, \"\");\n          } else {\n            handleInputError(\"email\", true, \"Incorrect email format\");\n          }\n        }\n      }}\n      error={inputErrorHandler.email.error}\n      className={className}\n    />\n  );\n};\n\nexport default EmailInput;\n"]},"metadata":{},"sourceType":"module"}